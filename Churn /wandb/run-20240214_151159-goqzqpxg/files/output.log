tensor(0.9998)
25793
torch.Size([128])
128
torch.Size([128, 1, 12])
8000
torch.Size([0, 12])
Traceback (most recent call last):
  File "/home/kaustubh/Code3/Churn /churn_trainer.py", line 102, in <module>
    main(data_path=data_path,batch_size=batch_size,num_epochs=num_epochs,learning_rate=learning_rate,train_flag=train_flag)
  File "/home/kaustubh/Code3/Churn /churn_trainer.py", line 80, in main
    X_emb_train,losses_train = create_model_embs2(net,trainloader_priv,device= torch.device('cuda'),l=len(X_train),h=0.82)
  File "/home/kaustubh/Code3/Churn /churn_help.py", line 369, in create_model_embs2
    X_emb[i*bs:i*bs+len(loss)] = torch.squeeze(net.y.detach().cpu())
RuntimeError: The expanded size of the tensor (0) must match the existing size (128) at non-singleton dimension 0.  Target sizes: [0, 12].  Tensor sizes: [128, 12]